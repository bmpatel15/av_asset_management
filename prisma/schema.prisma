generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgres"
  url       = "postgresql://postgres.hppzsnmlnygdckcateei:j50Hu9oYXj9a1upm@aws-0-us-east-1.pooler.supabase.com:6543/postgres?pgbouncer=true"
  directUrl = "postgresql://postgres.hppzsnmlnygdckcateei:j50Hu9oYXj9a1upm@aws-0-us-east-1.pooler.supabase.com:5432/postgres"
}

model User {
  id         String     @id @default(cuid())
  email      String     @unique
  name       String?
  role       UserRole   @default(BASIC)
  firebaseId String     @unique
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  checkouts  Checkout[]
}

model Equipment {
  id              String     @id @default(cuid())
  name            String
  category        Category
  makeModel       String
  status          Status     @default(AVAILABLE)
  location        String
  maintenanceDate DateTime?
  purchaseDate    DateTime
  purchaseCost    Float
  checkouts       Checkout[]
}

model Checkout {
  id           String    @id @default(cuid())
  equipmentId  String
  userId       String
  checkoutDate DateTime  @default(now())
  returnDate   DateTime?
  equipment    Equipment @relation(fields: [equipmentId], references: [id])
  user         User      @relation(fields: [userId], references: [id])
}

enum UserRole {
  ADMIN
  MANAGER
  STAFF
  BASIC
}

enum Permission {
  VIEW_EQUIPMENT
  ADD_EQUIPMENT
  EDIT_EQUIPMENT
  DELETE_EQUIPMENT
  CHECKOUT_EQUIPMENT
  CHECKIN_EQUIPMENT
  VIEW_REPORTS
  MANAGE_USERS
  ACCESS_ADMIN_PANEL
}

enum Category {
  CAMERA
  AUDIO
  LIGHTING
  OTHER
}

enum Status {
  AVAILABLE
  IN_USE
  MAINTENANCE
}
